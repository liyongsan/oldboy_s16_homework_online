简单的聊天室的例子，就是允许多个人同时一起聊天，每个人发送的消息所有人都能接收到，类似于 QQ 群的功能，而不是点对点的 QQ 好友之间的聊天。

要实现的有两部分：

Chat Server：聊天服务器，负责与用户建立 Socket 连接，并将某个用户发送的消息广播到所有在线的用户。
	接收多个客户端的连接
	从每个客户端读入消息病广播到其它连接的客户端

使用方法,直接运行即可：
python s.py



Chat Client：用户聊天客户端，可以输入聊天的内容并发送，同时可以显示其他用户的消息记录。

	监听服务器是否有消息发送过来
	检查用户的输入，如果用户输入某条消息，需要发送到服务器

使用方法：Python + c.py + 主机名 + 端口号
python c.py localhost 5000

上面的代码注意两点：
1.聊天室客户端代码不能在 windows 下运行，因为代码使用 select 同时监听 socket 和输入流，在 Windows 下 select 函数是由 WinSock 库提供，不能处理不是由 WinSock 定义的文件描述符。
2.当某个客户端在输入消息但还未发送出去时，服务器也发送消息过来，这样会冲刷掉客户端正在输入的消息,目前的解决方法是使用像 ncurses 终端库使用户输入和输出独立开，或者写一个 GUI 的程序。